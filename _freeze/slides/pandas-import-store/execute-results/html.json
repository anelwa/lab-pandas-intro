{
  "hash": "3809294ebcfdc506f268ceacdcf2e201",
  "result": {
    "markdown": "---\ntitle: Import and Store data\nlang: en\nsubtitle: Pandas Introduction\nauthor: Jan Kirenz\nexecute:\n  eval: true\n  echo: true\nhighlight-style: github\nformat:\n  revealjs: \n    toc: true\n    toc-depth: 1\n    embed-resources: false\n    theme: [dark, ../custom.scss]  \n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard: \n      buttons: false\n   #logo: images/logo.png\n    footer: Jan Kirenz\n---\n\n# Import pandas\n\n- To load the pandas package and start working with it, import the package. \n\n- The community agreed alias for pandas is `pd`\n\n. . .\n\n::: {#b6f24711 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n```\n:::\n\n\n# Create Data\n\n## Data creation\n\n- To manually store data in a table, create a DataFrame:\n\n::: {#8b5d029e .cell execution_count=2}\n``` {.python .cell-code code-line-numbers=\"|1|2|3|4|5|\"}\ndf = pd.DataFrame({\n    'name': [\"Tom\", \"Lisa\", \"Peter\"],\n    'height': [1.68, 1.93, 1.72],\n    'weight': [48.4, 89.8, 84.2],\n    'id': [1, 2, 3],\n    'city': ['Stuttgart', 'Stuttgart', 'Berlin']\n})\n```\n:::\n\n\n## Show data\n\n::: {#700478a6 .cell output-location='fragment' execution_count=3}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>id</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Tom</td>\n      <td>1.68</td>\n      <td>48.4</td>\n      <td>1</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Lisa</td>\n      <td>1.93</td>\n      <td>89.8</td>\n      <td>2</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Peter</td>\n      <td>1.72</td>\n      <td>84.2</td>\n      <td>3</td>\n      <td>Berlin</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Import data\n\n- Import data with the prefix `.read_*`\n\n![](https://pandas.pydata.org/docs/_images/02_io_readwrite.svg)\n\n\n## Import data\n\n- Import a CSV file in a GitHub repo \n\n. . .\n\n::: {#61abf3e1 .cell output-location='fragment' execution_count=4}\n``` {.python .cell-code code-line-numbers=\"|1|3|5|\"}\nURL = \"https://raw.githubusercontent.com/kirenz/datasets/master/campaign.csv\"\n\ndf_github = pd.read_csv(URL, sep=\",\", decimal='.')\n\ndf_github.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>city</th>\n      <th>income</th>\n      <th>membership_days</th>\n      <th>campaign_engagement</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>56</td>\n      <td>Berlin</td>\n      <td>136748</td>\n      <td>837</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>46</td>\n      <td>Stuttgart</td>\n      <td>25287</td>\n      <td>615</td>\n      <td>8</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>32</td>\n      <td>Berlin</td>\n      <td>146593</td>\n      <td>2100</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>60</td>\n      <td>Berlin</td>\n      <td>54387</td>\n      <td>2544</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>25</td>\n      <td>Berlin</td>\n      <td>28512</td>\n      <td>138</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Store data\n\n- Store data with the prefix `.to_*`\n\n. . .\n\n::: {#4c179cbd .cell execution_count=5}\n``` {.python .cell-code}\ndf_github.to_csv(\"data.csv\", index=False)\n```\n:::\n\n\n- By setting `index=False` the row index labels are not saved in the spreadsheet\n\n# Viewing data\n\n## Overview\n\n::: {#ae4e3bcc .cell output-location='fragment' execution_count=6}\n``` {.python .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>id</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Tom</td>\n      <td>1.68</td>\n      <td>48.4</td>\n      <td>1</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Lisa</td>\n      <td>1.93</td>\n      <td>89.8</td>\n      <td>2</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Peter</td>\n      <td>1.72</td>\n      <td>84.2</td>\n      <td>3</td>\n      <td>Berlin</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Head and tail\n\n::: {#6e0a7dc9 .cell output-location='fragment' execution_count=7}\n``` {.python .cell-code}\n# show first 2 rows\ndf.head(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>id</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Tom</td>\n      <td>1.68</td>\n      <td>48.4</td>\n      <td>1</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Lisa</td>\n      <td>1.93</td>\n      <td>89.8</td>\n      <td>2</td>\n      <td>Stuttgart</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n. . .\n\n::: {#862bed0f .cell output-location='fragment' execution_count=8}\n``` {.python .cell-code}\n# show last 2 rows\ndf.tail(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>id</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>Lisa</td>\n      <td>1.93</td>\n      <td>89.8</td>\n      <td>2</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Peter</td>\n      <td>1.72</td>\n      <td>84.2</td>\n      <td>3</td>\n      <td>Berlin</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Info\n\n- The `info()` method prints information about a DataFrame.\n\n. . .\n\n::: {#e68d3446 .cell output-location='fragment' execution_count=9}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3 entries, 0 to 2\nData columns (total 5 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   name    3 non-null      object \n 1   height  3 non-null      float64\n 2   weight  3 non-null      float64\n 3   id      3 non-null      int64  \n 4   city    3 non-null      object \ndtypes: float64(2), int64(1), object(2)\nmemory usage: 252.0+ bytes\n```\n:::\n:::\n\n\n## Column names\n\n::: {#6851b37b .cell output-location='fragment' execution_count=10}\n``` {.python .cell-code}\ndf.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nIndex(['name', 'height', 'weight', 'id', 'city'], dtype='object')\n```\n:::\n:::\n\n\n## Data type\n\n- Show data types ([dtypes](https://pandas.pydata.org/docs/user_guide/basics.html#basics-dtypes)).\n\n. . .\n\n::: {#4c6de9b7 .cell output-location='fragment' execution_count=11}\n``` {.python .cell-code}\ndf.dtypes\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nname       object\nheight    float64\nweight    float64\nid          int64\ncity       object\ndtype: object\n```\n:::\n:::\n\n\n- The data types in this DataFrame are integers (int64), floats (float64) and strings (object).\n\n## Index\n\n::: {#e7bda95f .cell output-location='fragment' execution_count=12}\n``` {.python .cell-code}\ndf.index\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\nRangeIndex(start=0, stop=3, step=1)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "pandas-import-store_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}