{
  "hash": "9142c83dddeace89b74dcd525e086fb7",
  "result": {
    "markdown": "---\ntitle: Change data types and add columns\n---\n\n## Import pandas\n\n::: {#46877716 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n```\n:::\n\n\n## Import data\n\n::: {#ee005921 .cell execution_count=2}\n``` {.python .cell-code}\n# URL of data\nURL = \"https://raw.githubusercontent.com/kirenz/datasets/master/height_clean.csv\"\ndf = pd.read_csv(URL)\n```\n:::\n\n\n::: {#1a282fd5 .cell execution_count=3}\n``` {.python .cell-code}\ndf.dtypes\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nname                       object\nid                          int64\nheight                      int64\naverage_height_parents    float64\ngender                     object\ndtype: object\n```\n:::\n:::\n\n\n## Change data type\n\n- There are several methods to [change data types in pandas](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.astype.html):\n\nThe most common method to change the data type is:\n\n- `.astype()`: Convert to a specific type (like \"int32\", \"float\" or \"catgeory\")\n- `.astype(str)`: Convert to string  \n  \nMore options:  \n  \n- `to_datetime`: Convert argument to datetime.\n- `to_timedelta`: Convert argument to timedelta.\n- `to_numeric`: Convert argument to a numeric type.\n- `numpy.ndarray.astype`: Cast a numpy array to a specified type.\n\n### Categorical data\n\n- Categoricals are a pandas data type corresponding to categorical variables in statistics. \n\n\n- A categorical variable takes on a limited, and usually fixed, number of possible values (categories). Examples are gender, social class, blood type, country affiliation, observation time or rating via Likert scales.\n\n\n- Convert variable \"gender\" to a category dtype:\n\n::: {#94f8fd91 .cell execution_count=4}\n``` {.python .cell-code}\ndf[\"gender\"] = df[\"gender\"].astype(\"category\")\n```\n:::\n\n\n### String data\n\n- In our example, `id` is not a number (we can't perform calculations with it)\n- It is just a unique identifier so we should transform it to a simple string (object)\n\nHint:\n\n```python\ndf['___'] = df['___'].___(___)\n```\n\n::: {#bb486fc8 .cell nbgrader='{\"grade\":false,\"grade_id\":\"id\",\"locked\":false,\"schema_version\":3,\"solution\":true,\"task\":false}' execution_count=5}\n``` {.python .cell-code}\n### BEGIN SOLUTION\ndf['id'] = df['id'].astype(str)\n### END SOLUTION\n```\n:::\n\n\n::: {#5ae48cdb .cell nbgrader='{\"grade\":true,\"grade_id\":\"c_id\",\"locked\":true,\"points\":2,\"schema_version\":3,\"solution\":false,\"task\":false}' execution_count=6}\n``` {.python .cell-code}\n\"\"\"Check if your code returns the correct output\"\"\"\nassert df.select_dtypes(include=[\"number\"]).columns.to_list() == ['height', 'average_height_parents']\nassert df.select_dtypes(include=[\"object\"]).columns.to_list() == ['name', 'id']\n```\n:::\n\n\n## Add new columns\n\n### Constant\n\n- Add a new variable called \"number\" to df \n- The new variable should have the number 42 in all rows\n\nHint:\n  \n```python\ndf[\"___\"] = ___\n```\n\n::: {#73d0d5f5 .cell nbgrader='{\"grade\":false,\"grade_id\":\"add\",\"locked\":false,\"schema_version\":3,\"solution\":true,\"task\":false}' execution_count=7}\n``` {.python .cell-code}\n### BEGIN SOLUTION\ndf[\"number\"] = 42\n### END SOLUTION\n```\n:::\n\n\n::: {#0842c5d4 .cell nbgrader='{\"grade\":true,\"grade_id\":\"c_add\",\"locked\":true,\"points\":2,\"schema_version\":3,\"solution\":false,\"task\":false}' execution_count=8}\n``` {.python .cell-code}\n\"\"\"Check if your code returns the correct output\"\"\"\nassert df.loc[[0], \"number\"].to_list() == [42]\n```\n:::\n\n\n### From existing\n\n - Create new columns from existing columns\n\n::: {#69092cf4 .cell execution_count=9}\n``` {.python .cell-code}\n# we use numpy to add some data with a nornmal distribution \nimport numpy as np\n\n# calculate height in m (from cm)\ndf['height_m'] = df.height/100 \n\n# add 20 random normal distributed numbers with a mean of 45 and standard deviation of 5\ndf['weight'] = round(np.random.normal(45, 5, 20) * df['height_m'],2)\n\n# calculate body mass index\ndf['bmi'] = round(df.weight / (df.height_m * df.height_m),2)\n```\n:::\n\n\n::: {#49975265 .cell execution_count=10}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>id</th>\n      <th>height</th>\n      <th>average_height_parents</th>\n      <th>gender</th>\n      <th>number</th>\n      <th>height_m</th>\n      <th>weight</th>\n      <th>bmi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Stefanie</td>\n      <td>1</td>\n      <td>162</td>\n      <td>161.5</td>\n      <td>female</td>\n      <td>42</td>\n      <td>1.62</td>\n      <td>69.40</td>\n      <td>26.44</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Peter</td>\n      <td>2</td>\n      <td>163</td>\n      <td>163.5</td>\n      <td>male</td>\n      <td>42</td>\n      <td>1.63</td>\n      <td>73.26</td>\n      <td>27.57</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Stefanie</td>\n      <td>3</td>\n      <td>163</td>\n      <td>163.2</td>\n      <td>female</td>\n      <td>42</td>\n      <td>1.63</td>\n      <td>82.44</td>\n      <td>31.03</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Manuela</td>\n      <td>4</td>\n      <td>164</td>\n      <td>165.1</td>\n      <td>female</td>\n      <td>42</td>\n      <td>1.64</td>\n      <td>72.59</td>\n      <td>26.99</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Simon</td>\n      <td>5</td>\n      <td>164</td>\n      <td>163.2</td>\n      <td>male</td>\n      <td>42</td>\n      <td>1.64</td>\n      <td>75.77</td>\n      <td>28.17</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Date\n\n- To add a date, we can use datetime and [strftime](https://strftime.org) (see code examples below):\n\n::: {#b115e38a .cell execution_count=11}\n``` {.python .cell-code}\n# we need datetime to add a date\nfrom datetime import datetime\n```\n:::\n\n\n::: {#2f58c6e2 .cell execution_count=12}\n``` {.python .cell-code}\ndf[\"date\"] = datetime.today().strftime('%Y-%m-%d')\n\ndf.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>id</th>\n      <th>height</th>\n      <th>average_height_parents</th>\n      <th>gender</th>\n      <th>number</th>\n      <th>height_m</th>\n      <th>weight</th>\n      <th>bmi</th>\n      <th>date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Stefanie</td>\n      <td>1</td>\n      <td>162</td>\n      <td>161.5</td>\n      <td>female</td>\n      <td>42</td>\n      <td>1.62</td>\n      <td>69.40</td>\n      <td>26.44</td>\n      <td>2023-08-19</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Peter</td>\n      <td>2</td>\n      <td>163</td>\n      <td>163.5</td>\n      <td>male</td>\n      <td>42</td>\n      <td>1.63</td>\n      <td>73.26</td>\n      <td>27.57</td>\n      <td>2023-08-19</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Stefanie</td>\n      <td>3</td>\n      <td>163</td>\n      <td>163.2</td>\n      <td>female</td>\n      <td>42</td>\n      <td>1.63</td>\n      <td>82.44</td>\n      <td>31.03</td>\n      <td>2023-08-19</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n| Code | Example                 | Description                                                                                                                                                                      |\n| ---- | ----------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| %a   | Sun                     | Weekday as locale’s abbreviated name.                                                                                                                                            |\n| %A   | Sunday                  | Weekday as locale’s full name.                                                                                                                                                   |\n| %w   | 0                       | Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.                                                                                                                |\n| %d   | 8                       | Day of the month as a zero-padded decimal number.                                                                                                                                |\n| %-d  | 8                       | Day of the month as a decimal number. (Platform specific)                                                                                                                        |\n| %b   | Sep                     | Month as locale’s abbreviated name.                                                                                                                                              |\n| %B   | September               | Month as locale’s full name.                                                                                                                                                     |\n| %m   | 9                       | Month as a zero-padded decimal number.                                                                                                                                           |\n| %-m  | 9                       | Month as a decimal number. (Platform specific)                                                                                                                                   |\n| %y   | 13                      | Year without century as a zero-padded decimal number.                                                                                                                            |\n| %Y   | 2013                    | Year with century as a decimal number.                                                                                                                                           |\n| %H   | 7                       | Hour (24-hour clock) as a zero-padded decimal number.                                                                                                                            |\n| %-H  | 7                       | Hour (24-hour clock) as a decimal number. (Platform specific)                                                                                                                    |\n| %I   | 7                       | Hour (12-hour clock) as a zero-padded decimal number.                                                                                                                            |\n| %-I  | 7                       | Hour (12-hour clock) as a decimal number. (Platform specific)                                                                                                                    |\n| %p   | AM                      | Locale’s equivalent of either AM or PM.                                                                                                                                          |\n| %M   | 6                       | Minute as a zero-padded decimal number.                                                                                                                                          |\n| %-M  | 6                       | Minute as a decimal number. (Platform specific)                                                                                                                                  |\n| %S   | 5                       | Second as a zero-padded decimal number.                                                                                                                                          |\n| %-S  | 5                       | Second as a decimal number. (Platform specific)                                                                                                                                  |\n| %f   | 0                       | Microsecond as a decimal number, zero-padded on the left.                                                                                                                        |\n| %z   | 0                       | UTC offset in the form ±HHMM\\[SS\\[.ffffff\\]\\] (empty string if the object is naive).                                                                                             |\n| %Z   | UTC                     | Time zone name (empty string if the object is naive).                                                                                                                            |\n| %j   | 251                     | Day of the year as a zero-padded decimal number.                                                                                                                                 |\n| %-j  | 251                     | Day of the year as a decimal number. (Platform specific)                                                                                                                         |\n| %U   | 36                      | Week number of the year (Sunday as the first day of the week) as a zero padded decimal number. All days in a new year preceding the first Sunday are considered to be in week 0. |\n| %W   | 35                      | Week number of the year (Monday as the first day of the week) as a decimal number. All days in a new year preceding the first Monday are considered to be in week 0.             |\n| %c   | Sun Sep 8 07:06:05 2013 | Locale’s appropriate date and time representation.                                                                                                                               |\n| %x   | 09.08.13                | Locale’s appropriate date representation.                                                                                                                                        |\n| %X   | 07:06:05                | Locale’s appropriate time representation.                                                                                                                                        |\n| %%   | %                       | A literal '%' character.                                                                                                                                                         |\n\n",
    "supporting": [
      "3_data_types_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}